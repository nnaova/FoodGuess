name: Automatic GitHub Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  check_merge_from_dev:
    runs-on: ubuntu-latest
    outputs:
      is_merge_from_dev: ${{ steps.check_merge.outputs.is_merge_from_dev }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if commit is a merge from dev to main
        id: check_merge
        run: |
          # V√©rifiez le message du dernier commit
          LATEST_COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          echo "Message du dernier commit: $LATEST_COMMIT_MSG"

          # V√©rifie √©galement si c'est un merge en g√©n√©ral
          IS_MERGE=$(git log -1 --pretty=format:"%p" | wc -w)

          # D√©finir des patterns plus larges pour d√©tecter le merge de dev vers main
          if [[ "$LATEST_COMMIT_MSG" == *"dev"* && "$LATEST_COMMIT_MSG" == *"main"* ]] || 
             [[ "$LATEST_COMMIT_MSG" == *"Merge"* && "$IS_MERGE" -gt 1 ]]; then
            echo "D√©tect√© comme un merge de dev vers main"
            echo "is_merge_from_dev=true" >> $GITHUB_OUTPUT
          else
            echo "Non d√©tect√© comme un merge de dev vers main"
            echo "is_merge_from_dev=false" >> $GITHUB_OUTPUT
          fi

      # Toujours extraire la version, quelle que soit l'origine du commit
      - name: Extract version from pubspec.yaml
        id: get_version
        run: |
          # Assurez-vous que le fichier existe et afficher son contenu pour le d√©bogage
          if [ -f "pubspec.yaml" ]; then
            echo "Fichier pubspec.yaml trouv√©"
            echo "Premiers 20 lignes du pubspec.yaml:"
            head -n 20 pubspec.yaml
            
            # Extraire la version avec diff√©rentes m√©thodes pour plus de robustesse
            VERSION=$(grep -m 1 "version:" pubspec.yaml | awk '{print $2}' | tr -d '"'"'" | cut -d '+' -f1)
            
            # V√©rifier si la version a √©t√© extraite correctement
            if [ -n "$VERSION" ]; then
              echo "Version extraite avec succ√®s: $VERSION"
              echo "version=$VERSION" >> $GITHUB_OUTPUT
            else
              # M√©thode de secours pour l'extraction de version
              echo "√âchec de la premi√®re m√©thode d'extraction, essai d'une m√©thode alternative"
              VERSION=$(sed -n 's/^version: //p' pubspec.yaml | tr -d '"'"'" | cut -d '+' -f1)
              
              if [ -n "$VERSION" ]; then
                echo "Version extraite avec m√©thode alternative: $VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              else
                # D√©finir une version par d√©faut en cas d'√©chec
                VERSION="1.0.0"
                echo "Impossible d'extraire la version, utilisation de la valeur par d√©faut: $VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              fi
            fi
          else
            echo "ERREUR: Le fichier pubspec.yaml n'a pas √©t√© trouv√©!"
            echo "Contenu du r√©pertoire actuel:"
            ls -la
            # D√©finir une version par d√©faut
            VERSION="1.0.0"
            echo "Utilisation de la version par d√©faut: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

  create_release:
    needs: check_merge_from_dev
    # Ex√©cute la cr√©ation de release si c'est un merge de dev vers main ou si le workflow a √©t√© d√©clench√© manuellement
    if: needs.check_merge_from_dev.outputs.is_merge_from_dev == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.0"
          channel: "stable"

      # Modification temporaire du pubspec.yaml pour la compatibilit√©
      - name: Ajuster les d√©pendances pour la compatibilit√©
        run: |
          sed -i 's/flutter_lints: \^5.0.0/flutter_lints: \^2.0.0/' pubspec.yaml
          sed -i 's/cupertino_icons: \^1.0.8/cupertino_icons: \^1.0.2/' pubspec.yaml
          sed -i 's/uuid: \^4.4.1/uuid: \^3.0.7/' pubspec.yaml
          sed -i 's/provider: \^6.1.2/provider: \^6.0.5/' pubspec.yaml
          cat pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build release for Android
        run: flutter build apk --release

      - name: Prepare Android APK for release
        run: |
          mkdir -p release-assets
          # V√©rifie d'abord si l'APK existe au chemin standard
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            cp build/app/outputs/flutter-apk/app-release.apk release-assets/foodguess-${{ needs.check_merge_from_dev.outputs.version }}.apk
            echo "APK trouv√© et copi√© vers release-assets/"
          else
            # Recherche l'APK dans le r√©pertoire des sorties
            APK_PATH=$(find build/ -name "*.apk" -type f | head -n 1)
            if [ -n "$APK_PATH" ]; then
              cp "$APK_PATH" release-assets/foodguess-${{ needs.check_merge_from_dev.outputs.version }}.apk
              echo "APK trouv√© √† $APK_PATH et copi√© vers release-assets/"
            else
              echo "ERREUR: Impossible de trouver l'APK. La compilation a peut-√™tre √©chou√©."
              exit 1
            fi
          fi
          ls -la release-assets/

      - name: Build release for Web
        run: flutter build web --release

      - name: Zip Web Build
        run: |
          cd build/web
          zip -r ../../release-assets/foodguess-web-${{ needs.check_merge_from_dev.outputs.version }}.zip .
          cd ../..
          ls -la release-assets/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check_merge_from_dev.outputs.version }}
          name: Release v${{ needs.check_merge_from_dev.outputs.version }}
          body: |
            # FoodGuess v${{ needs.check_merge_from_dev.outputs.version }}

            Cette version est automatiquement publi√©e suite au merge de la branche `dev` vers `main`.

            ## T√©l√©chargements
            - [üì± Application Android (APK)](https://github.com/${{ github.repository }}/releases/download/v${{ needs.check_merge_from_dev.outputs.version }}/foodguess-${{ needs.check_merge_from_dev.outputs.version }}.apk)
            - [üåê Version Web (ZIP)](https://github.com/${{ github.repository }}/releases/download/v${{ needs.check_merge_from_dev.outputs.version }}/foodguess-web-${{ needs.check_merge_from_dev.outputs.version }}.zip)

            ## Notes de version
            _Consultez l'historique des commits pour plus de d√©tails sur les changements apport√©s._
          files: |
            release-assets/foodguess-${{ needs.check_merge_from_dev.outputs.version }}.apk
            release-assets/foodguess-web-${{ needs.check_merge_from_dev.outputs.version }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
